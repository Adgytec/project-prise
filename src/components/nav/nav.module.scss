@use "/src/styles/abstracts/media-queries" as ab;

.navUpper {
	padding-block: 1em;
	display: none;

	@include ab.screen-64 {
		display: flex;
		align-items: center;
		gap: clamp(0.5em, 0.75vi, 1.5em);
		// gap: 0.75em;
	}

	div {
		max-width: 15rem;
	}

	.donate {
		margin-inline-start: auto;
		max-width: fit-content;

		a {
			--_bg: var(--accent-primary);

			display: inline-block;
			padding-inline: clamp(1em, calc(1.25 * var(--vw)), 1.5em);
			padding-block: 0.5em;

			color: var(--white);
			font-size: clamp(0.75rem, calc(1.25 * var(--vw)), 1rem);
			text-decoration-color: transparent;

			background-color: var(--_bg);
			border-radius: 0.75em;

			&:hover,
			&:focus-visible {
				--_bg: var(--accent-primary-hover);
			}

			&:active {
				--_bg: var(--accent-primary-active);
			}
		}
	}
}

.nav {
	padding-block: 0.5em;
	background-color: rgba(255, 255, 255, 0.5);
	backdrop-filter: blur(5px);

	position: sticky;
	top: 0;
	z-index: 10;

	.container {
	}

	.control {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding-block: 0.5rem;

		a {
			--_bg: var(--accent-primary);

			display: inline-block;
			padding-inline: clamp(1em, calc(1.25 * var(--vw)), 1.5em);
			padding-block: 0.5em;

			color: var(--white);
			font-size: clamp(0.75rem, calc(1.25 * var(--vw)), 1rem);
			text-decoration-color: transparent;

			background-color: var(--_bg);
			border-radius: 0.75em;

			&:hover,
			&:focus-visible {
				--_bg: var(--accent-primary-hover);
			}

			&:active {
				--_bg: var(--accent-primary-active);
			}
		}

		label {
			z-index: 11;

			span {
				--_bg: var(--accent-primary);

				display: inline-block;
				background-color: var(--_bg);
				width: 2rem;
				height: 3px;
				position: relative;
				border-radius: 10px;

				transition: rotate 300ms, translate 300ms;

				&::before,
				&::after {
					border-radius: inherit;
					content: "";
					position: absolute;

					inset: 0;

					background-color: var(--_bg);
					transition: rotate 300ms, translate 300ms, opacity 100ms;
				}

				&::before {
					translate: 0 -8px;
				}

				&::after {
					translate: 0 8px;
				}
			}
		}

		input {
			display: none;
		}
		input:checked + label {
			span {
				rotate: -45deg;

				&::before {
					rotate: 90deg;
					translate: 0 -1px;
				}

				&::after {
					opacity: 0;
				}
			}
		}

		@include ab.screen-64 {
			display: none;
		}
	}

	&:has(input:checked) {
		.items {
			clip-path: inset(0);
		}
	}

	.items {
		background-color: white;
		position: fixed;
		top: 0;
		left: 0;
		width: calc(100 * var(--vw));
		height: 100vb;

		clip-path: inset(0 100% 0 0);
		transition: clip-path 300ms;
		padding-inline: 2rem;
		padding-block: 3rem;

		@include ab.screen-64 {
			position: static;
			width: auto;
			height: auto;
			background-color: transparent;
			clip-path: none;
			padding: 0;
		}

		ul {
			list-style-type: none;
			padding: 0;

			display: flex;
			flex-direction: column;
			gap: 1em;

			a {
				font-weight: 600;
				color: var(--text);

				text-decoration-color: transparent;

				&:hover {
					text-decoration-color: currentColor;
				}
			}

			@include ab.screen-64 {
				flex-direction: row;
				justify-content: center;
				gap: 2rem;
			}
		}

		.images {
			display: grid;
			gap: 2em;

			img {
				max-width: 15rem;
			}

			@include ab.screen-64 {
				display: none;
			}
		}
	}
}
