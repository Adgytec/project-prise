@use "/src/styles/abstracts" as ab;

.hero {
	height: calc(100dvb - var(--nav, 0));
	overflow: hidden;

	position: relative;

	@include ab.hover {
		&:hover {
			button {
				opacity: 1;
			}

			.text {
				opacity: 1;
			}
		}
	}

	> button {
		display: none;

		position: absolute;
		z-index: 1;

		top: 50%;
		translate: 100% -50%;

		opacity: 0;

		svg {
			font-size: 2rem;
			color: var(--white);
		}

		&[data-scroll="next"] {
			right: 0;
			translate: -100% -50%;
		}

		@include ab.hover {
			display: block;
		}
	}

	.container {
		display: flex;
	}

	.item {
		flex: 0 0 100%;
		min-width: 0;

		height: calc(100dvb - var(--nav, 0));

		position: relative;
	}

	img {
		--_opacity: 0.75;

		background-image: linear-gradient(
			to bottom right,
			hsl(from var(--accent-secondary) h s l / var(--_opacity)),
			hsl(from var(--accent-primary) h s l / var(--_opacity))
		);

		width: 100%;
		height: 100%;

		object-fit: cover;

		&[data-location="diff"] {
			@include ab.screen-40 {
				object-fit: contain;
			}
		}

		// &[data-index="0"] {
		// 	object-position: center 25%;
		// }
	}

	.text {
		position: absolute;
		inset: 0;

		background-image: linear-gradient(
			to bottom,
			rgba(0, 0, 0, 0.25),
			rgba(0, 0, 0, 0.5),
			rgba(0, 0, 0, 0.75) 75%,
			rgba(0, 0, 0, 1)
		);

		font-size: clamp(1.25rem, 2vi, 1.75rem);
		font-weight: 600;

		color: var(--white);

		@include ab.hover {
			opacity: 0;
		}

		transition: opacity 300ms;

		> div {
			display: grid;
			align-items: end;
			height: 100%;
			padding-block-end: 2em;
		}

		p {
			--_space: 10px;

			position: relative;
			padding-inline-start: var(--_space);

			&::before {
				// increase it to decrease the height
				--_h: 7.5px;

				position: absolute;
				content: "";
				width: 6px;
				top: var(--_h);
				bottom: var(--_h);

				left: calc(-1 * var(--_space));
				background-color: var(--accent-secondary);
			}
		}
	}
}
